import Head from 'next/head'
import Image from 'next/image'
import { Product as IProduct } from '@/@types/Product'
import { Product } from '@/components/Product'
import { CategoryTitle } from '@/components/CategoryTitle'
const { Client } = require('@notionhq/client');

const notion = new Client({ auth: process.env.NOTION_SECRET });

type Props = {
  products: IProduct[];
  title: any;
}

export default function Home({ products, title }: Props) {
  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="px-12 py-8">
        <h1 className="font-medium text-teal-50 text-3xl mb-8">{title}</h1>
        {products.length === 0 && <h2 className="text-gray-400">Ops! Parece que o <strong className="text-teal-100 font-normal">{title}</strong> est√° vazio.</h2>}
        {products.length !== 0 && <ul className="flex flex-wrap gap-4">
          {products.map((product, index) => {
            if (product.type === "title") return <CategoryTitle product={product} key={index} index={index}/>;
            
            return <Product product={product} key={index} />;
          })}
        </ul>}
      </main>
    </>
  )
}

export async function getStaticProps() {
  const res = await fetch(process.env.API_URL + '/api/products')
  const products = await res.json()
  const results = products.results

  const pageId = process.env.PAGE_ID;
  const page = await notion.pages.retrieve({ page_id: pageId });

  return {
    props: {
      products: results,
      title: page.properties.title.title[0].plain_text
    },
  }
}